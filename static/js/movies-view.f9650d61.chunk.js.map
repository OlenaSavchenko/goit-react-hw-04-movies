{"version":3,"sources":["services/api.js","components/SearchForm/SearchForm.js","components/SearchBar/SearchBar.js","views/MoviesPageViews/MoviesPageViews.js"],"names":["key","axios","defaults","baseURL","getMoviesApi","query","get","then","response","data","results","getMovieApi","movieId","getPopularMoviesApi","getCastApi","cast","getReviewsApi","SearchForm","state","searchData","handleDataSearch","event","inputDataValue","currentTarget","value","setState","handleDataSubmit","preventDefault","normalizeSearchData","toLowerCase","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","SearchBar","MoviesPageViews","movies","error","onChangeQuery","prevProps","prevState","fetchMovies","catch","url","match","map","id","title","name","backdrop_path","poster_path","to","src","alt","width"],"mappings":"yIAAA,+LAEMA,EAAM,mCACZC,IAAMC,SAASC,QAAU,gCAElB,IAAMC,EAAe,SAAAC,GAC1B,OAAOJ,IACJK,IADI,+BAEqBN,EAFrB,4DAE4EK,IAEhFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGvBC,EAAc,SAAAC,GACzB,OAAOX,IACJK,IADI,gBACSM,EADT,oBAC4BZ,EAD5B,oBAEJO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGlBI,EAAsB,WACjC,OAAOZ,IACJK,IADI,mCAC4BN,IAChCO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGvBI,EAAa,SAAAF,GACxB,OAAOX,IACJK,IADI,gBACSM,EADT,4BACoCZ,IACxCO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKM,SAGvBC,EAAgB,SAAAJ,GAC3B,OAAOX,IACJK,IADI,gBACSM,EADT,4BACoCZ,EADpC,2BAEJO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,a,kOCYrBO,G,kNArCbC,MAAQ,CACNC,WAAY,I,EAGdC,iBAAmB,SAAAC,GACjB,IAAMC,EAAiBD,EAAME,cAAcC,MAC3C,EAAKC,SAAS,CAAEN,WAAYG,K,EAG9BI,iBAAmB,SAAAL,GACjBA,EAAMM,iBADoB,IAGpBC,EADiB,EAAKV,MAApBC,WAC+BU,cACvC,EAAKC,MAAMC,SAASH,I,uDAGZ,IACAT,EAAea,KAAKd,MAApBC,WACR,OACE,0BAAMc,UAAU,aAAaF,SAAUC,KAAKN,kBAC1C,4BAAQQ,KAAK,SAASD,UAAU,qBAC9B,0BAAMA,UAAU,2BAAhB,WAGF,2BACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZb,MAAOL,EACPmB,SAAUN,KAAKZ,wB,GApCAmB,cCWVC,G,MAVG,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAH,OAChB,4BAAQE,UAAU,aAChB,kBAAC,EAAD,CAAYF,SAAUA,O,gBC+DXU,E,4MA/DbvB,MAAQ,CACNwB,OAAQ,GACRrC,MAAO,GACPsC,MAAO,M,EAqBTC,cAAgB,SAAAvC,GACd,EAAKoB,SAAS,CACZpB,MAAOA,EACPqC,OAAQ,GACRC,MAAO,Q,iEAtBQE,EAAWC,GAAY,IAChCzC,EAAU2B,KAAKd,MAAfb,MACJyC,EAAUzC,QAAUA,GACtB2B,KAAKe,gB,kKAKC1C,EAAU2B,KAAKd,MAAfb,M,SACFD,YAAaC,GAChBE,MAAK,SAAAmC,GACJ,EAAKjB,SAAS,CACZiB,OAAQA,OAGXM,OAAM,SAAAL,GAAK,OAAI,EAAKlB,SAAS,CAAEkB,a,qIAW1B,IACAD,EAAWV,KAAKd,MAAhBwB,OACAO,EAAQjB,KAAKF,MAAMoB,MAAnBD,IAGR,OACE,oCACE,kBAAC,EAAD,CAAWlB,SAAUC,KAAKY,gBAC1B,wBAAIX,UAAU,cACXS,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,cAAeC,EAAnC,EAAmCA,YAAnC,OACV,wBAAIxD,IAAKoD,EAAInB,UAAU,cACrB,kBAAC,IAAD,CAAMwB,GAAE,UAAKR,EAAL,YAAYG,KAChBG,GAAiBC,IACjB,yBAAKvB,UAAU,gBACb,yBACEyB,IAAG,UAZL,mCAYK,OAAeH,GAAiBC,GACnCG,IAAKN,GAASC,EACdM,MAAM,SAIZ,2BAAIP,GAASC,c,GAtDCf","file":"static/js/movies-view.f9650d61.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst key = '6e09ebe9f547368140ae2e8c44013351';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesApi = query => {\n  return axios\n    .get(\n      `search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${query}`,\n    )\n    .then(response => response.data.results);\n};\n\nexport const getMovieApi = movieId => {\n  return axios\n    .get(`movie/${movieId}?api_key=${key}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const getPopularMoviesApi = () => {\n  return axios\n    .get(`trending/all/day?api_key=${key}`)\n    .then(response => response.data.results);\n};\n\nexport const getCastApi = movieId => {\n  return axios\n    .get(`movie/${movieId}/credits?api_key=${key}`)\n    .then(response => response.data.cast);\n};\n\nexport const getReviewsApi = movieId => {\n  return axios\n    .get(`movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`)\n    .then(response => response.data.results);\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchForm.css';\n\nclass SearchForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    searchData: '',\n  };\n\n  handleDataSearch = event => {\n    const inputDataValue = event.currentTarget.value;\n    this.setState({ searchData: inputDataValue });\n  };\n\n  handleDataSubmit = event => {\n    event.preventDefault();\n    const { searchData } = this.state;\n    const normalizeSearchData = searchData.toLowerCase();\n    this.props.onSubmit(normalizeSearchData);\n  };\n\n  render() {\n    const { searchData } = this.state;\n    return (\n      <form className=\"SearchForm\" onSubmit={this.handleDataSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={searchData}\n          onChange={this.handleDataSearch}\n        />\n      </form>\n    );\n  }\n}\nexport default SearchForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchForm from '../SearchForm';\nimport './SearchBar.css';\n\nconst SearchBar = ({ onSubmit }) => (\n  <header className=\"Searchbar\">\n    <SearchForm onSubmit={onSubmit} />\n  </header>\n);\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar';\nimport './MoviePagesViews.css';\nimport { getMoviesApi } from '../../services/api';\n\nclass MoviesPageViews extends Component {\n  state = {\n    movies: [],\n    query: '',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    if (prevState.query !== query) {\n      this.fetchMovies();\n    }\n  }\n\n  async fetchMovies() {\n    const { query } = this.state;\n    await getMoviesApi(query)\n      .then(movies => {\n        this.setState({\n          movies: movies,\n        });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      query: query,\n      movies: [],\n      error: null,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { url } = this.props.match;\n    const baseURL = 'https://image.tmdb.org/t/p/w500';\n\n    return (\n      <>\n        <SearchBar onSubmit={this.onChangeQuery}></SearchBar>\n        <ul className=\"MoviesList\">\n          {movies.map(({ id, title, name, backdrop_path, poster_path }) => (\n            <li key={id} className=\"MoviesItem\">\n              <Link to={`${url}/${id}`}>\n                {(backdrop_path || poster_path) && (\n                  <div className=\"MoviesThummb\">\n                    <img\n                      src={`${baseURL}${backdrop_path || poster_path}`}\n                      alt={title || name}\n                      width=\"100\"\n                    ></img>\n                  </div>\n                )}\n                <p>{title || name}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default MoviesPageViews;\n"],"sourceRoot":""}
{"version":3,"sources":["services/api.js","img/default.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Cast/Cast.js","components/Reviews/Reviews.js","views/MovieDetailsPageView.js"],"names":["key","axios","defaults","baseURL","getMoviesApi","query","get","then","response","data","results","getMovieApi","movieId","getPopularMoviesApi","getCastApi","cast","getReviewsApi","module","exports","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","state","this","props","match","params","setState","catch","error","className","map","id","character","name","profile_path","src","alt","defaultImage","Component","Reviews","reviews","existingReviews","author","content","url","MovieDetailsPageView","overview","vote_average","backdrop_path","poster_path","release_date","first_air_date","title","original_language","genres","handleGoBack","history","routes","movies","movieImg","movieName","movieReleaseDate","isMovieGenres","type","onClick","to","path","movieCast","component","movieReviews"],"mappings":"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","file":"static/js/movie-view.d7b50e6a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst key = '6e09ebe9f547368140ae2e8c44013351';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesApi = query => {\n  return axios\n    .get(\n      `search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${query}`,\n    )\n    .then(response => response.data.results);\n};\n\nexport const getMovieApi = movieId => {\n  return axios\n    .get(`movie/${movieId}?api_key=${key}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const getPopularMoviesApi = () => {\n  return axios\n    .get(`trending/all/day?api_key=${key}`)\n    .then(response => response.data.results);\n};\n\nexport const getCastApi = movieId => {\n  return axios\n    .get(`movie/${movieId}/credits?api_key=${key}`)\n    .then(response => response.data.cast);\n};\n\nexport const getReviewsApi = movieId => {\n  return axios\n    .get(`movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`)\n    .then(response => response.data.results);\n};\n","module.exports = __webpack_public_path__ + \"static/media/default.440b9b23.jpg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { Component } from 'react';\nimport './Cast.css';\nimport { getCastApi } from '../../services/api';\nimport defaultImage from '../../img/default.jpg';\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n    await getCastApi(movieId)\n      .then(cast => {\n        this.setState({ cast: cast });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    const { cast } = this.state;\n    const baseURL = 'https://image.tmdb.org/t/p/w500';\n\n    return (\n      <>\n        <div>Cast</div>\n        <ul className=\"Cast-list\">\n          {cast.map(({ id, character, name, profile_path }) => (\n            <li key={id} className=\"Cast-item\">\n              {profile_path ? (\n                <img src={`${baseURL}${profile_path}`} alt={name}></img>\n              ) : (\n                <img src={defaultImage} alt={name}></img>\n              )}\n\n              <div className=\"Cast-title\">\n                <p>{name} </p>\n\n                {character && <p> ({character})</p>}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Cast;\n","import React, { Component } from 'react';\nimport { getReviewsApi } from '../../services/api';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n\n    await getReviewsApi(movieId)\n      .then(reviews => {\n        this.setState({ reviews: reviews });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    const { reviews } = this.state;\n    const existingReviews = reviews.length > 0;\n\n    return (\n      <>\n        <div>Reviews</div>\n        {existingReviews ? (\n          <ul>\n            {reviews.map(({ id, author, content, url }) => (\n              <li key={id}>\n                <div>\n                  {author}: \"{content}\"\n                </div>\n                <p>Find more at: {url} </p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>There are no Reviews</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Reviews;\n","import React, { Component } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Cast from '../components/Cast';\nimport Reviews from '../components/Reviews';\nimport routes from '../routes';\nimport { getMovieApi } from '../services/api';\n\nclass MovieDetailsPageView extends Component {\n  state = {\n    id: null,\n    overview: null,\n    vote_average: null,\n    backdrop_path: null,\n    poster_path: null,\n    release_date: null,\n    first_air_date: null,\n    title: null,\n    name: null,\n    original_language: null,\n    genres: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n\n    await getMovieApi(movieId)\n      .then(response => {\n        this.setState({ ...response });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  handleGoBack = () => {\n    const { history } = this.props;\n    history.push(routes.movies);\n  };\n\n  render() {\n    const baseURL = 'https://image.tmdb.org/t/p/w500';\n    const {\n      overview,\n      vote_average,\n      backdrop_path,\n      poster_path,\n      release_date,\n      first_air_date,\n      title,\n      name,\n      original_language,\n      genres,\n    } = this.state;\n\n    const movieImg = backdrop_path || poster_path;\n    const movieName = title || name;\n    const movieReleaseDate = release_date || first_air_date;\n    const isMovieGenres = genres.length > 0;\n    const { url } = this.props.match;\n\n    return (\n      <>\n        <button type=\"button\" onClick={this.handleGoBack}>\n          Back\n        </button>\n        {movieName && <h1> {movieName}</h1>}\n        {movieImg && <img src={`${baseURL}${movieImg}`} alt={movieName}></img>}\n        {overview && <p> {overview}</p>}\n        {movieReleaseDate > 0 && <p>Date of release: {movieReleaseDate}</p>}\n        {vote_average > 0 && <p>Average mark: {vote_average}</p>}\n        {original_language && <p>Original language: {original_language} </p>}\n\n        {isMovieGenres && (\n          <ul>\n            Genre:\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        )}\n\n        <NavLink to={`${url}/cast`}>\n          <p>The cast</p>\n        </NavLink>\n\n        <NavLink to={`${url}/reviews`}>\n          <p>Reviews</p>\n        </NavLink>\n\n        <Route path={routes.movieCast} component={Cast} />\n        <Route path={routes.movieReviews} component={Reviews} />\n      </>\n    );\n  }\n}\n\nexport default MovieDetailsPageView;\n"],"sourceRoot":""}